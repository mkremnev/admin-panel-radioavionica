<?phpdeclare(strict_types=1);namespace App\Military\Command\AddUnits;use App\Flusher;use App\Military\Entity\Units\Address;use App\Military\Entity\Units\Name;use App\Military\Entity\Units\Commander;use App\Military\Entity\Units\Id;use App\Military\Entity\Units\Officials;use App\Military\Entity\Units\Units;use App\Military\Entity\Units\UnitsRepository;use DomainException;class Handler{    private UnitsRepository $units;    private Flusher $flusher;    public function __construct(UnitsRepository $units, Flusher $flusher)    {        $this->units = $units;        $this->flusher = $flusher;    }    public function handle(Command $command): void    {        $name = new Name($command->name);        if ($this->units->hasByName($name)) {            throw new DomainException("Units already exist.");        }        $address = new Address($command->address);        $commander = new Commander(            $command->lastname,            $command->firstname,            $command->surname        );        $unit = new Units(            Id::generate(),            $name,            $address,            $commander,            $command->amount        );        if ($command->officials){            foreach ($command->officials as $official){                $attachOfficial = new Officials($official['unit'], $official['rank'], $official['fio'], $official['telephone']);                $unit->attachOfficials($attachOfficial);            }        }        $this->units->add($unit);        $this->flusher->flush();    }}
<?phpdeclare(strict_types=1);namespace App\Military\Entity\Units;use Doctrine\Common\Collections\ArrayCollection;use Doctrine\Common\Collections\Collection;use Doctrine\ORM\Mapping as ORM;use DomainException;/** * @ORM\Entity * @ORM\Table(name="military_units") */class Units{    /**     * @ORM\Column(type="military_units_id")     * @ORM\Id     */    private Id $id;    /**     * @ORM\Column(type="military_units_name")     */    private Name $name;    /**     * @ORM\Column(type="military_units_address")     */    private Address $address;    /**     * @ORM\Embedded(class="Commander")     */    private Commander $commander;    /**     * @ORM\Column(type="integer")     */    private int $amount;    /**     * @ORM\OneToMany(targetEntity="UnitsOfficials", mappedBy="units", cascade={"all"}, orphanRemoval=true)     */    private ?Collection $officials;    public function __construct(        Id $id,        Name $name,        Address $address,        Commander $commander,        int $amount    )    {        $this->id = $id;        $this->name = $name;        $this->address = $address;        $this->commander = $commander;        $this->amount = $amount;        $this->officials = new ArrayCollection();    }    public function attachOfficials(Officials $official): void    {        /** @var UnitsOfficials $existing */        foreach ($this->officials as $existing) {            if ($existing->getOfficials()->isEqualTo($official)) {                throw new DomainException('Official is already attached.');            }        }        $this->officials->add(new UnitsOfficials($this, $official));    }}
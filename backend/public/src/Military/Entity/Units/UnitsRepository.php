<?phpdeclare(strict_types=1);namespace App\Military\Entity\Units;use Doctrine\ORM\EntityManagerInterface;use Doctrine\ORM\EntityRepository;use DomainException;class UnitsRepository{    private EntityManagerInterface $em;    private EntityRepository $repo;    public function __construct(EntityManagerInterface $em, EntityRepository $repo)    {        $this->repo = $repo;        $this->em = $em;    }    public function getId(Id $id): Units    {        if(!$units = $this->repo->find($id->getValue())) {            throw new DomainException("Units is not found.");        }        /** @var Units $units */        return $units;    }    public function getByName(Name $name): Units    {        if(!$units = $this->repo->findOneBy(['name' => $name->getValue()])) {            throw new DomainException("Units is not found");        }        /** @var Units $units */        return $units;    }    public function add(Units $units): void    {        $this->em->persist($units);    }}
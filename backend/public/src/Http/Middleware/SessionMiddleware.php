<?phpdeclare(strict_types=1);namespace App\Http\Middleware;use App\Security\SessionManager;use DomainException;use Psr\Http\Message\ResponseInterface;use Psr\Http\Message\ServerRequestInterface;use Psr\Http\Server\MiddlewareInterface;use Psr\Http\Server\RequestHandlerInterface;class SessionMiddleware implements MiddlewareInterface{    private SessionManager $session;    public function __construct(SessionManager $session)    {        $this->session = $session;    }    public function process(ServerRequestInterface $request, RequestHandlerInterface $handler): ResponseInterface    {        if ($this->session->exists('user')) {            throw new DomainException('User is already login.');        }        return $handler->handle($request);    }}
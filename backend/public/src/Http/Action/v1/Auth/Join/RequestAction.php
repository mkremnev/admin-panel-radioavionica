<?phpdeclare(strict_types=1);namespace App\Http\Action\v1\Auth\Join;use App\Auth\Command\JoinByEmail\Request\Command;use App\Auth\Command\JoinByEmail\Request\Handler;use App\Http\EmptyResponse;use App\Http\JsonResponse;use DomainException;use Psr\Http\Message\ResponseInterface;use Psr\Http\Message\ServerRequestInterface;use Psr\Http\Server\RequestHandlerInterface;use stdClass;class RequestAction implements RequestHandlerInterface{    private Handler $handler;    /**     * RequestAction constructor.     * @param Handler $handler     */    public function __construct(Handler $handler)    {        $this->handler = $handler;    }    public function handle(ServerRequestInterface $request): ResponseInterface    {        $data = json_decode((string)$request->getBody(), true);        $command = new Command();        $command->email = trim($data['email'] ?? '');        $command->password = trim($data['password'] ?? '');        try {            $this->handler->handle($command);            return new EmptyResponse(201);        } catch (DomainException $e) {            return new JsonResponse(['message' => $e->getMessage()], 409);        }    }}